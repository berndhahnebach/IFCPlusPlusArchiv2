CMAKE_MINIMUM_REQUIRED (VERSION 3.7.2)

IF(NOT WIN32)
IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "Release")
ENDIF()

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
ENDIF(NOT WIN32)

FIND_PACKAGE(Boost REQUIRED)
IF(Boost_FOUND)
    INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS}) 
	ADD_DEFINITIONS( -DCARVE_SYSTEM_BOOST )
ENDIF()

INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} src/)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR})
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/common)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/src/common)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/src/include)
INCLUDE_DIRECTORIES( ${INCLUDE_DIRECTORIES} ${OSG_INCLUDE_DIR} )

LINK_DIRECTORIES (${LINK_DIRECTORIES} ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}) 
FILE (GLOB ifc4_source "src/ifcpp/IFC4/lib/*.cpp")

SET(IFCPP_SOURCE_FILES 
  src/ifcpp/IFC4/IfcPPEntityFactory.cpp
  src/ifcpp/IFC4/IfcPPTypeFactory.cpp
  src/ifcpp/model/IfcPPModel.cpp
  src/ifcpp/model/UnitConverter.cpp
  src/ifcpp/reader/IfcPPReader.cpp
  src/ifcpp/reader/IfcPPReaderSTEP.cpp
  src/ifcpp/reader/IfcPPReaderXML.cpp
  src/ifcpp/reader/ReaderUtil.cpp
  src/ifcpp/writer/IfcPPWriterSTEP.cpp

  ${ifc4_source}
)



IF(CMAKE_COMPILER_IS_GNUCXX)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
ELSE(CMAKE_COMPILER_IS_GNUCXX)
ENDIF()

if (MSVC)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /bigobj ")
    
ENDIF()

IF(BUILD_STATIC_LIBRARY)
    ADD_LIBRARY(IfcPlusPlus STATIC ${IFCPP_SOURCE_FILES})
ELSE(BUILD_STATIC_LIBRARY)
    ADD_DEFINITIONS(-DIFCPP_AS_DYNAMIC_LIBRARY)
    ADD_DEFINITIONS(-DIFCPP_LIB)
    ADD_LIBRARY(IfcPlusPlus SHARED ${IFCPP_SOURCE_FILES})
ENDIF(BUILD_STATIC_LIBRARY)

set_target_properties(IfcPlusPlus PROPERTIES DEBUG_POSTFIX "d")
set_target_properties(IfcPlusPlus PROPERTIES LINK_FLAGS_DEBUG "/debug /INCREMENTAL:NO")

INSTALL(
    DIRECTORY   src/ifcpp
    DESTINATION include
    FILES_MATCHING PATTERN "*.h"
)
INSTALL(
		TARGETS IfcPlusPlus
		RUNTIME DESTINATION bin
		LIBRARY DESTINATION bin
		ARCHIVE DESTINATION lib
	)
    
    
    
