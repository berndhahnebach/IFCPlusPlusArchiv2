CMAKE_MINIMUM_REQUIRED (VERSION 3.7.2)

IF(NOT WIN32)
IF(NOT CMAKE_BUILD_TYPE)
   SET(CMAKE_BUILD_TYPE "Release")
ENDIF()

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
ENDIF(NOT WIN32)

# Qt library
message(STATUS "Qt5 is used")
FIND_PACKAGE(Qt5Core REQUIRED)
FIND_PACKAGE(Qt5Widgets REQUIRED)
FIND_PACKAGE(Qt5OpenGL REQUIRED)
ADD_DEFINITIONS(${Qt5Widgets_DEFINITIONS})
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} 
	  ${QT_INCLUDES}
	  ${QT_INCLUDE_DIR}
	  ${QT_QT_INCLUDE_DIR}
	  ${QT_QTCORE_INCLUDE_DIR}
	  ${QT_QTGUI_INCLUDE_DIR}
	  ${QT_QTOPENGL_INCLUDE_DIR}
	  ${Qt5Widgets_INCLUDE_DIRS}
	  )

FIND_PACKAGE(OpenSceneGraph REQUIRED osgDB osgUtil osgGA osgFX osgSim osgText osgViewer)

INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR})
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/common)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/src/common)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_SOURCE_DIR}/src/include)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${CARVE_BINARY_DIR}/include) 
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${IFCPP_SOURCE_DIR}/IfcPlusPlus/src/)
INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES} ${IFCPP_SOURCE_DIR}/SimpleViewerExample/src/)
INCLUDE_DIRECTORIES( ${INCLUDE_DIRECTORIES} ${OPENTHREADS_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${INCLUDE_DIRECTORIES} ${OSG_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${INCLUDE_DIRECTORIES} ${OSGGA_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${INCLUDE_DIRECTORIES} ${OSGDB_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${INCLUDE_DIRECTORIES} ${OSGUTIL_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${INCLUDE_DIRECTORIES} ${OSGANIMATION_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${INCLUDE_DIRECTORIES} ${OSGTEXT_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${INCLUDE_DIRECTORIES} ${OSG_BINARY_DIR}/include ) 

SET(IFCPPVIEWER_SOURCE_FILES 
  src/IfcPlusPlusSystem.cpp
  src/main.cpp
  src/cmd/CmdRemoveSelectedObjects.cpp
  src/cmd/CmdWriteIfcFile.cpp
  src/cmd/Command.cpp
  src/cmd/CommandManager.cpp
  src/cmd/LoadIfcFileCommand.cpp
  src/gui/IfcTreeWidget.cpp
  src/gui/MainWindow.cpp
  src/gui/TabReadWrite.cpp
  src/gui/TabView.cpp
  src/viewer/GraphicsWindowQt.cpp
  src/viewer/OrbitCameraManipulator.cpp
  src/viewer/OrbitCameraManipulator.cpp
  src/viewer/ViewerWidget.cpp
)

SET(IFCPPVIEWER_MOC_FILES
  src/IfcPlusPlusSystem.h
  src/gui/IfcTreeWidget.h
  src/gui/MainWindow.h
  src/gui/TabReadWrite.h
  src/gui/TabView.h
  src/viewer/ViewerWidget.h
)

FIND_PACKAGE(Boost) 
IF(Boost_FOUND)
    INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS}) 
	ADD_DEFINITIONS( -DCARVE_SYSTEM_BOOST )
ENDIF()

QT5_WRAP_CPP( IFCPPVIEWER_MOC_GENERATED_FILES ${IFCPPVIEWER_MOC_FILES})

LINK_DIRECTORIES (${LINK_DIRECTORIES} ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}) 
LINK_DIRECTORIES (${LINK_DIRECTORIES} ${CARVE_BINARY_DIR}/lib) 
LINK_DIRECTORIES (${LINK_DIRECTORIES} ${CARVE_BINARY_DIR}/common) 
LINK_DIRECTORIES (${LINK_DIRECTORIES} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}) 
LINK_DIRECTORIES (${LINK_DIRECTORIES} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}) 

ADD_EXECUTABLE(SimpleViewerExample 
  ${IFCPPVIEWER_MOC_GENERATED_FILES}
  ${IFCPPVIEWER_SOURCE_FILES}
  ${SimpleViewerExample_RESOURCES_RCC}
)

set_target_properties(SimpleViewerExample PROPERTIES DEBUG_POSTFIX "d")

QT5_USE_MODULES(SimpleViewerExample Core Gui Widgets OpenGL)

TARGET_LINK_LIBRARIES(SimpleViewerExample ${OPENTHREADS_LIBRARY})
#TARGET_LINK_LIBRARIES(SimpleViewerExample optimized ${OPENTHREADS_LIBRARY} debug ${OPENTHREADS_LIBRARY_DEBUG})
TARGET_LINK_LIBRARIES(SimpleViewerExample optimized ${OSG_LIBRARY} debug ${OSG_LIBRARY_DEBUG})
TARGET_LINK_LIBRARIES(SimpleViewerExample optimized ${OSGDB_LIBRARY} debug ${OSGDB_LIBRARY_DEBUG})
TARGET_LINK_LIBRARIES(SimpleViewerExample optimized ${OSGGA_LIBRARY} debug ${OSGGA_LIBRARY_DEBUG})
TARGET_LINK_LIBRARIES(SimpleViewerExample optimized ${OSGUTIL_LIBRARY} debug ${OSGUTIL_LIBRARY_DEBUG})
TARGET_LINK_LIBRARIES(SimpleViewerExample optimized ${OSGFX_LIBRARY} debug ${OSGFX_LIBRARY_DEBUG})
TARGET_LINK_LIBRARIES(SimpleViewerExample optimized ${OSGVIEWER_LIBRARY} debug ${OSGVIEWER_LIBRARY_DEBUG})
TARGET_LINK_LIBRARIES(SimpleViewerExample optimized ${OSGTEXT_LIBRARY} debug ${OSGTEXT_LIBRARY_DEBUG})
TARGET_LINK_LIBRARIES(SimpleViewerExample ${QT_LIBRARIES})
TARGET_LINK_LIBRARIES(SimpleViewerExample carve)
TARGET_LINK_LIBRARIES(SimpleViewerExample IfcPlusPlus)

IF(CMAKE_COMPILER_IS_GNUCXX)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
ENDIF()

INSTALL(
		TARGETS SimpleViewerExample
		RUNTIME DESTINATION bin
		LIBRARY DESTINATION bin
		ARCHIVE DESTINATION lib
	)
    
    
